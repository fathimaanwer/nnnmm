{"ast":null,"code":"var _jsxFileName = \"/Users/stevesajanjacob/Desktop/IT Projects/help/fathima/nnnmm/src/pendingdoc.js\",\n  _s = $RefreshSig$();\n// PendingDoctors.js\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PendingDoctors = () => {\n  _s();\n  const [pendingDoctors, setPendingDoctors] = useState([]);\n  useEffect(() => {\n    // Fetch data from your API endpoint\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('/api/pending-doctors'); // Replace with your actual API endpoint\n        setPendingDoctors(response.data);\n      } catch (error) {\n        console.error('Error fetching pending doctors:', error);\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array to run effect only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pending Doctor Registrations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pendingDoctors.map(doctor => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [doctor.name, \" - \", doctor.specialty]\n      }, doctor.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(PendingDoctors, \"DbvH4j+ggrkCi8bqIHnzx+iusyg=\");\n_c = PendingDoctors;\nexport default PendingDoctors;\nvar _c;\n$RefreshReg$(_c, \"PendingDoctors\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","PendingDoctors","_s","pendingDoctors","setPendingDoctors","fetchData","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","doctor","name","specialty","id","_c","$RefreshReg$"],"sources":["/Users/stevesajanjacob/Desktop/IT Projects/help/fathima/nnnmm/src/pendingdoc.js"],"sourcesContent":["// PendingDoctors.js\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst PendingDoctors = () => {\n  const [pendingDoctors, setPendingDoctors] = useState([]);\n\n  useEffect(() => {\n    // Fetch data from your API endpoint\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('/api/pending-doctors'); // Replace with your actual API endpoint\n        setPendingDoctors(response.data);\n      } catch (error) {\n        console.error('Error fetching pending doctors:', error);\n      }\n    };\n\n    fetchData();\n  }, []); // Empty dependency array to run effect only once\n\n  return (\n    <div>\n      <h2>Pending Doctor Registrations</h2>\n      <ul>\n        {pendingDoctors.map(doctor => (\n          <li key={doctor.id}>\n            {doctor.name} - {doctor.specialty}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default PendingDoctors;\n\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,sBAAsB,CAAC,CAAC,CAAC;QAC1DH,iBAAiB,CAACE,QAAQ,CAACE,IAAI,CAAC;MAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IAEDJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCf,OAAA;MAAAW,QAAA,EACGR,cAAc,CAACa,GAAG,CAACC,MAAM,iBACxBjB,OAAA;QAAAW,QAAA,GACGM,MAAM,CAACC,IAAI,EAAC,KAAG,EAACD,MAAM,CAACE,SAAS;MAAA,GAD1BF,MAAM,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEd,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACb,EAAA,CA7BID,cAAc;AAAAoB,EAAA,GAAdpB,cAAc;AA+BpB,eAAeA,cAAc;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}